<?php

/**
 * @file
 * Add a devel tab to flickrsync nodes.
 */
/**
 * Implements hook_menu().
 */
function flickrsync_devel_menu() {
  
  $items['node/%node/flickrsync_devel'] = array(
    'title' => 'FlickrSync Devel',
    'page callback' => 'flickrsync_devel_page',
    'page arguments' => array(1),
    'access callback' => 'flickrsync_devel_tab_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 110,
  );

  return $items;
}

/**
 * Implements hook_admin_paths().
 */
function flickrsync_devel_admin_paths() {
  $paths = array(
    'node/*/flickrsync_devel' => TRUE,
  );
  return $paths;
}

/**
 * Implements hook_permission().
 */
function flickrsync_devel_permission() {
  return array(
    'access flickrsync devel' => array(
      'title' => t('access flickrsync devel tab'),
      'description' => t('TODO Add a description for \'import from flickr\''),
    )
  );
}


/**
* Access callback for node/%node/flickrsync_devel.
*/
function flickrsync_devel_tab_access($node) {
  if ($node->type == variable_get('flickrsync_node_type', '')) {
    return user_access('access flickrsync devel');
  }
  return FALSE;
}


function flickrsync_devel_page($node) {
  $nid = $node->nid;
  $photo_id = flickrsync_get_photo_id($nid);
  
  $f = flickrapi_phpFlickr();
  if (!$f) {
    drupal_set_message(t("Unable to access Flickr API"), 'error');
    return FALSE;
  }

  // info to put into the node
  $flickr_photo = $f->photos_getInfo($photo_id);
  
  if (!$flickr_photo) {
    drupal_set_message(t("Unable to access Flickr"), 'error');
    return FALSE;
  }
  
  return kdevel_print_object($flickr_photo);
}